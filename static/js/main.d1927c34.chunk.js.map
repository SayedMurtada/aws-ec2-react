{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handleChange","event","name","target","value","setState","handleSubmit","preventDefault","state","user","pass","msg","onSubmit","this","type","onChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAEqBA,E,kDACnB,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAIRC,aAAc,SAACC,GACb,IAAIC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MACzB,EAAKC,SAAL,eAAgBH,EAAME,KARN,EAWlBE,aAAa,SAACL,GACZA,EAAMM,iBACc,OAAjB,EAAKC,MAAMC,MAAiC,OAAlB,EAAKD,MAAME,KACtC,EAAKL,SAAS,CAACM,IAAI,uBAEnB,EAAKN,SAAS,CAACM,IAAI,6BAdrB,EAAKH,MAAQ,CAACC,KAAK,GAAIC,KAAK,GAAIC,IAAK,IAFrB,E,0CAoBlB,WACE,OACE,gCACE,4CACA,uBAAMC,SAAUC,KAAKP,aAArB,UACE,8CACA,uBAAOQ,KAAK,OAAOZ,KAAM,OAAOa,SAAUF,KAAKb,eAAe,uBAC9D,6CACA,uBAAOc,KAAK,WAAWZ,KAAM,OAAOa,SAAUF,KAAKb,eAAe,uBAClE,uBAAOc,KAAK,SAASV,MAAM,WAC3B,uBAAOU,KAAK,QAAQV,MAAM,aAE5B,uBACCS,KAAKL,MAAMG,W,GAlCaK,aCUlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d1927c34.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {user:\"\", pass:\"\", msg: \"\"};\n  }\n\n  handleChange= (event)=>{\n    let name = event.target.name;\n    let value = event.target.value;\n    this.setState({[name]:value});\n  }\n\n  handleSubmit=(event)=>{\n    event.preventDefault();\n    if(this.state.user==\"Ali\" && this.state.pass ==\"123\"){\n      this.setState({msg:\"successfully login\"});\n    }else{\n      this.setState({msg:\"Failure try once again \"});\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Login Page</h2>\n        <form onSubmit={this.handleSubmit}>\n          <label>User Name</label>\n          <input type=\"text\" name =\"user\" onChange={this.handleChange}/><br/>\n          <label>Password</label>\n          <input type=\"Password\" name =\"pass\" onChange={this.handleChange}/><br/>\n          <input type=\"submit\" value=\"submit\"/>\n          <input type=\"reset\" value=\"reset\"/>\n        </form>\n        <br/>\n        {this.state.msg}\n      </div>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}